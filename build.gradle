plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7' // 라이브러리 버전관리해서 호환성 보장
}

group = 'com.application'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    querydslApt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

project.ext {
//    querydslVersion = dependencyManagement.importedProperties['querydsl.version']
    querydslVersion = "5.0.0"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'com.mysql:mysql-connector-j:8.4.0'
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Querydsl
//    implementation "com.querydsl:querydsl-jpa"
//    annotationProcessor "com.querydsl:querydsl-apt:${project.querydslVersion}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "com.querydsl:querydsl-apt:${project.querydslVersion}:jakarta" // 스프링부트 3.0부터 달라짐 , 원하는 방식으로 넣으면 버전 인식 못함, 변수로 받아야함.${project.querydslVersion}
    implementation "com.querydsl:querydsl-jpa:${project.querydslVersion}:jakarta" // 스프링부트 3.0 부터 달라짐 - core를 포함하고 있음
    implementation "com.querydsl:querydsl-collections"
    //annotation 일부가 처리될떄 annotationProcessor로 처리할때 문제가 안생기기 위해 선언
    annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응 , annotationProcessor로 넣는게 중요.
    annotationProcessor "jakarta.persistence:jakarta.persistence-api" // 스프링부트 3.0 부터 달라져서 [추가]
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 설정부 실제 Q클래스가 만들어지는 공간 (빌드시)
// 기본 위치 : 빌드시 classes위체에 생심
def generated = 'src/main/generated'


// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// querydsl QClass 파일 생성 위치를 지정(잡아주는)
// Q클래스 생성위치가 인텔리제이랑 , 충돌나지 않기위함
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}